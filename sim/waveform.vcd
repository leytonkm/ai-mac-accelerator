$date
	Sun Jul  6 23:18:30 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 32 ! c11 [31:0] $end
$var wire 32 " c10 [31:0] $end
$var wire 32 # c01 [31:0] $end
$var wire 32 $ c00 [31:0] $end
$var reg 16 % a00 [15:0] $end
$var reg 16 & a01 [15:0] $end
$var reg 16 ' a10 [15:0] $end
$var reg 16 ( a11 [15:0] $end
$var reg 16 ) b00 [15:0] $end
$var reg 16 * b01 [15:0] $end
$var reg 16 + b10 [15:0] $end
$var reg 16 , b11 [15:0] $end
$var reg 1 - clk $end
$var reg 1 . rst $end
$scope module dut $end
$var wire 16 / a00 [15:0] $end
$var wire 16 0 a01 [15:0] $end
$var wire 16 1 a10 [15:0] $end
$var wire 16 2 a11 [15:0] $end
$var wire 16 3 b00 [15:0] $end
$var wire 16 4 b01 [15:0] $end
$var wire 16 5 b10 [15:0] $end
$var wire 16 6 b11 [15:0] $end
$var wire 1 - clk $end
$var wire 1 . rst $end
$var wire 32 7 temp_c11 [31:0] $end
$var wire 32 8 temp_c10 [31:0] $end
$var wire 32 9 temp_c01 [31:0] $end
$var wire 32 : temp_c00 [31:0] $end
$var wire 32 ; c11 [31:0] $end
$var wire 32 < c10 [31:0] $end
$var wire 32 = c01 [31:0] $end
$var wire 32 > c00 [31:0] $end
$scope module mac00a $end
$var wire 16 ? a [15:0] $end
$var wire 32 @ acc_in [31:0] $end
$var wire 16 A b [15:0] $end
$var wire 1 - clk $end
$var wire 1 . rst $end
$var reg 32 B acc_out [31:0] $end
$upscope $end
$scope module mac00b $end
$var wire 16 C a [15:0] $end
$var wire 32 D acc_in [31:0] $end
$var wire 16 E b [15:0] $end
$var wire 1 - clk $end
$var wire 1 . rst $end
$var reg 32 F acc_out [31:0] $end
$upscope $end
$scope module mac01a $end
$var wire 16 G a [15:0] $end
$var wire 32 H acc_in [31:0] $end
$var wire 16 I b [15:0] $end
$var wire 1 - clk $end
$var wire 1 . rst $end
$var reg 32 J acc_out [31:0] $end
$upscope $end
$scope module mac01b $end
$var wire 16 K a [15:0] $end
$var wire 32 L acc_in [31:0] $end
$var wire 16 M b [15:0] $end
$var wire 1 - clk $end
$var wire 1 . rst $end
$var reg 32 N acc_out [31:0] $end
$upscope $end
$scope module mac10a $end
$var wire 16 O a [15:0] $end
$var wire 32 P acc_in [31:0] $end
$var wire 16 Q b [15:0] $end
$var wire 1 - clk $end
$var wire 1 . rst $end
$var reg 32 R acc_out [31:0] $end
$upscope $end
$scope module mac10b $end
$var wire 16 S a [15:0] $end
$var wire 32 T acc_in [31:0] $end
$var wire 16 U b [15:0] $end
$var wire 1 - clk $end
$var wire 1 . rst $end
$var reg 32 V acc_out [31:0] $end
$upscope $end
$scope module mac11a $end
$var wire 16 W a [15:0] $end
$var wire 32 X acc_in [31:0] $end
$var wire 16 Y b [15:0] $end
$var wire 1 - clk $end
$var wire 1 . rst $end
$var reg 32 Z acc_out [31:0] $end
$upscope $end
$scope module mac11b $end
$var wire 16 [ a [15:0] $end
$var wire 32 \ acc_in [31:0] $end
$var wire 16 ] b [15:0] $end
$var wire 1 - clk $end
$var wire 1 . rst $end
$var reg 32 ^ acc_out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
1.
0-
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5000
0.
1-
#10000
0-
#15000
b101 :
b101 B
b101 D
b1110 $
b1110 >
b1110 F
b110 9
b110 J
b110 L
b10000 #
b10000 =
b10000 N
b1111 8
b1111 R
b1111 T
b11100 "
b11100 <
b11100 V
b10010 7
b10010 Z
b10010 \
b100000 !
b100000 ;
b100000 ^
b1000 ,
b1000 6
b1000 M
b1000 ]
b111 +
b111 5
b111 E
b111 U
b110 *
b110 4
b110 I
b110 Y
b101 )
b101 3
b101 A
b101 Q
b100 (
b100 2
b100 S
b100 [
b11 '
b11 1
b11 O
b11 W
b10 &
b10 0
b10 C
b10 K
b1 %
b1 /
b1 ?
b1 G
1-
#20000
0-
#25000
b110010 !
b110010 ;
b110010 ^
b101011 "
b101011 <
b101011 V
b10110 #
b10110 =
b10110 N
b10011 $
b10011 >
b10011 F
1-
#30000
0-
#35000
1-
#40000
0-
#45000
1-
#50000
0-
#55000
1-
#60000
0-
#65000
1-
#70000
0-
#75000
1-
#80000
0-
#85000
1-
#90000
0-
#95000
1-
#100000
0-
#105000
1-
#110000
0-
#115000
1-
#120000
0-
#125000
1-
#130000
0-
#135000
1-
#140000
0-
#145000
1-
#150000
0-
#155000
1-
#160000
0-
#165000
1-
#170000
0-
#175000
1-
#180000
0-
#185000
1-
#190000
0-
#195000
1-
#200000
0-
#205000
1-
#210000
0-
#215000
1-
#220000
0-
#225000
1-
#230000
0-
#235000
1-
#240000
0-
#245000
1-
#250000
0-
#255000
1-
#260000
0-
#265000
1-
#270000
0-
#275000
1-
#280000
0-
#285000
1-
#290000
0-
#295000
1-
#300000
0-
#305000
1-
#310000
0-
#315000
1-
#320000
0-
#325000
1-
#330000
0-
#335000
1-
#340000
0-
#345000
1-
#350000
0-
#355000
1-
#360000
0-
#365000
1-
#370000
0-
#375000
1-
#380000
0-
#385000
1-
#390000
0-
#395000
1-
#400000
0-
#405000
1-
#410000
0-
#415000
1-
